<?xml version="1.0" encoding="utf-8" ?>
<bp:blueprint xmlns:bp="xmlns:ananas:blueprint:base"
	xmlns:awt="xmlns:ananas:blueprint:awt" xmlns:swing="xmlns:ananas:blueprint:swing">

	<bp:import type="class:NamespaceLoader"
		value="ananas.lib.blueprint.elements.swing.NamespaceLoader" />
	<bp:import type="class:NamespaceLoader"
		value="ananas.lib.blueprint.elements.awt.NamespaceLoader" />

	<bp:content>
		<JFrame xmlns="xmlns:ananas:blueprint:swing" id="root"
			title="Blueprint DEMO" x="320" y="240" width="640" height="480">
			<MenuBar xmlns="xmlns:ananas:blueprint:awt">
				<Menu label="File">
					<MenuItem label="New"></MenuItem>
					<MenuItem id="id_menu_exit" label="Exit">
					</MenuItem>
				</Menu>
				<Menu label="Edit">
					<MenuItem label="Cut"></MenuItem>
					<MenuItem label="Copy"></MenuItem>
					<MenuItem label="Paste"></MenuItem>
					<Menu label="Find">
						<MenuItem label="Find in Document"></MenuItem>
						<MenuItem label="Find in Directory"></MenuItem>
					</Menu>
				</Menu>
				<Menu label="Help">
					<MenuItem label="Help Content"></MenuItem>
					<MenuItem label="About"></MenuItem>
				</Menu>
			</MenuBar>

			<awt:GridLayout rows="2" columns="2" />

			<awt:Container>
				<awt:BorderLayout />

				<awt:position value="south" />
				<JButton id="id_button_south" text="south" />

				<swing:position value="north" />
				<JButton id="id_button_hello" text="hello" />

				<swing:position value="east" />
				<JButton id="id_button_3" text="east"></JButton>

				<swing:position value="west" />
				<JLabel id="id_button_4" text="west-xxxxxxxx" />

				<swing:position value="center" />
				<JButton id="id_button_5" text="中心"></JButton>

			</awt:Container>

			<awt:Container>
				<awt:FlowLayout />
				<awt:position value="a" />
				<JButton id="id_button_1" text="button 1"></JButton>
				<swing:position value="b" />
				<JButton id="id_button_2" text="button 2"></JButton>
				<swing:position value="b" />
				<JButton id="id_button_3" text="button 3"></JButton>
				<swing:position value="b" />
				<JButton id="id_button_4" text="button 4"></JButton>

				<JButton id="id_button_4" text="(^_^)"></JButton>

			</awt:Container>

			<JPanel>
				<awt:GridLayout rows="4" columns="4" />

				<JButton text="a JButton" />
				<JLabel text="a JLabel" />
				<JTextField text="a JTextField" />
				<JPasswordField text="a JPasswordField" />

			</JPanel>

			<JPanel>
				<awt:GridLayout rows="1" columns="0" />
				<JScrollPane>
					<JTextArea>

						A JLabel object can
						display either text, an image, or
						both. You can
						specify where in the
						label's display area the label's
						contents are
						aligned by setting the
						vertical and horizontal
						alignment. By
						default, labels are vertically
						centered in their
						display area.
						Text-only labels are leading edge
						aligned, by default;
						image-only
						labels are horizontally centered, by
						default.

					</JTextArea>
				</JScrollPane>
				<JScrollPane>
					<JLabel>
					<![CDATA[<html><body><p>]]>
						A display area for a short text string or an image, or both. A
						label
						does not react to input events. As a result, it cannot get the
						keyboard focus. A label can, however, display a keyboard
						alternative as a convenience for a nearby component that has a
						keyboard alternative but can't display it.
					<![CDATA[</p><p>]]>
						A JLabel object can
						display either text, an image, or both. You can
						specify where in the
						label's display area the label's contents are
						aligned by setting the
						vertical and horizontal alignment. By
						default, labels are vertically
						centered in their display area.
						Text-only labels are leading edge
						aligned, by default; image-only
						labels are horizontally centered, by
						default.
					<![CDATA[</p></body></html>]]>
					</JLabel>
				</JScrollPane>
			</JPanel>

		</JFrame>
	</bp:content>
</bp:blueprint>
